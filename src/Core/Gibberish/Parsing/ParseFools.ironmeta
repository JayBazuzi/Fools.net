using System;
using System.Linq;
using Gibberish.AST;

ironmeta ParseFools<char, Parse> : ParseBlockLanguage
{
	Declarations = ((BlankLine* OneDeclaration)*):statements -> { return Parse.MergeAll(statements.Results); };

	OneDeclaration = InNamespace(AtRoot) | Specification(AtRoot);

	InNamespace :indentation = Block(indentation, InNamespacePrelude, AllowedDeclarationsInNamespace):block -> { return Namespace.From(block.ExtractBlock()); };
	InNamespacePrelude = KW("in.namespace") Name:name -> { return name; };
	AllowedDeclarationsInNamespace = Nothing;

	Specification :indentation = Block(indentation, SpecificationPrelude, AllowedDeclarationsInSpecification):block -> { return SpecificationSection.From(block.ExtractBlock()); };
	SpecificationPrelude = KW("specify") Description*:headers -> { return Parse.MergeAll(headers.Results); };
	AllowedDeclarationsInSpecification = Nothing;

	Description = /[\-a-zA-z0-9_. ]+/:desc (&':' | '/') -> { return Parse.Text(new string(desc.Inputs.ToArray()).Trim()); };
}