using System;
using System.Linq;
using Gibberish.AST;
using Gibberish.AST._1_Bare;

ironmeta RecognizeBlocks<char, Recognition> : IronMeta.Matcher.Matcher<char, Recognition>
{
	LanguageConstruct = Block(AtRoot) | Statement;

	Statement = LineContent:content NL -> { return _ExtractStatementAndErrors(content); };
	
	Block :indentation = indentation LineContent:prelude ":" NotNL:trailingWhitespace NL Body(indentation):body -> { return _ExtractBlockAndErrors(prelude, body, trailingWhitespace); };
	Body :indentation = (Indent(indentation) Statement)+:statements -> { return statements; };

	LineContent = /[^\r\n:]/*;
	NotNL = /[^\r\n]/*;

	BlankLine = '\t'* NL;
	AtRoot = &.?;
	Indent :indents = '\t' indents;

	Nothing = (~(.?));
	NL = "\r\n" | "\n" | "\r";
}