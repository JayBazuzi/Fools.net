using System;
using System.Linq;
using Gibberish.AST;
using Gibberish.AST._1_Bare;

ironmeta RecognizeBlocks<char, Recognition> : IronMeta.Matcher.Matcher<char, Recognition>
{
	WholeFile = LanguageConstruct*:matches -> { return matches.Results.Merge(); };
	LanguageConstruct = BlankLine | Prelude | Statement;

	Statement = '\t'*:indentation (~(':' | '\n' | '\r') .)*:content NL -> { return _ExtractStatementAndErrors(content, indentation.Inputs.Count()); };

	Prelude = '\t'*:indentation (~(':' | '\n' | '\r') .)*:content ":" (~('\n' | '\r') .)*:trailingContent NL -> { return _ExtractPreludeAndErrors(indentation.Inputs.Count(), content.AsString(), trailingContent.AsString()); };
	
	BlankLine = /[\t ]/* NL;

	Nothing = (~(.?));
	NL = "\r\n" | "\n" | "\r";
}