using System;
using System.Linq;
using Gibberish.AST;

ironmeta ParseBlockLanguage<char, Parse> : IronMeta.Matcher.Matcher<char, Parse>
{
	Name = /[a-zA-z0-9_.]+/:name -> { return Parse.Valid(new NameNode(name.Inputs), Parse.NoErrors); };

	PassStatement = Statement("pass") -> { return Parse.Valid(new PassStatement(), Parse.NoErrors); };

	Statement :rule = rule:r NL -> { return r; };
	Block :indentation :prelude :allowed_statements = indentation prelude:prelude ":" NL Body(indentation, allowed_statements):body -> { return Parse.Valid(new Block(prelude.Results.Single(), body.Results), Parse.NoErrors); };
	Body :indentation :allowed_statements = ((Indent(indentation) PassStatement) | ((Indent(indentation) allowed_statements)+)):statements -> { return statements; };

	BlankLine = '\t'* NL;

	AtRoot = &.?;
	Indent :indents = '\t' indents;

	Nothing = (~(.?));
	KW :str = str (WS+ | &NL);
	WS = ' ';
	NotNL = /[^\r\n]/;
	NL = "\r\n" | "\n" | "\r";
}