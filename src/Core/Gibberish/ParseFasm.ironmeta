using System;
using System.Linq;
using Gibberish.AST;

ironmeta ParseFasm<char, ParseTree> : IronMeta.Matcher.Matcher<char, ParseTree>
{
	FasmFile = "use language fasm" NL -> { return ParseTree.Empty; };

	TopLevelStatement = DefineThunk(AtRoot);

	DefineThunk :indentation = indentation KW("define.thunk") Name:name ":" NL Body(indentation):body -> { return new DefineThunkNode(((NameNode)name).Name, ((BodyNode)body).Statements); };
	Name = /[a-zA-z0-9_.]+/:name -> { return new NameNode(name.Inputs); };
	Body :indentation = Indent(indentation) "pass" NL -> { return new BodyNode(new PassStatement()); };

	AtRoot = &.?;
	Indent :indents = '\t' indents;

	KW :str = str (WS+ | &NL);
	WS = ' ';
	NL = "\r\n" | "\n" | "\r";
}