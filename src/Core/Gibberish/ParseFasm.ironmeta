using System;
using System.Linq;
using Gibberish.AST;

ironmeta ParseFasm<char, ParseTree> : IronMeta.Matcher.Matcher<char, ParseTree>
{
	FasmFile = "use language fasm" NL -> { return ParseTree.Empty; };
	DefineThunk = KW("define.thunk") Name:name ":" NL Body:body -> { return new DefineThunkNode(((NameNode)name).Name, ((BodyNode)body).Statements); };
	Name = "some.name" -> { return new NameNode("some.name"); };
	Body = '\t' "pass" NL -> { return new BodyNode(new PassStatement()); };

	KW :str = str (WS+ | &NL);
	WS = ' ';
	NL = "\r\n" | "\n" | "\r";
}